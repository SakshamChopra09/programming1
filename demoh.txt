#include <iostream>
#include <stdlib.h>
using namespace std;

int Partition(int *A, int start, int end)
{
    int Pindex = start;
    int pivot = A[end];
    for (int i = start; i < end; i++)
    {
        if (A[i] < pivot)
        {
            swap(A[i], A[Pindex]);
            Pindex++;
        }
    }
    swap(A[end], A[Pindex]);
    return Pindex;
}

int RandomizedPartition(int *A, int start, int end)
{
    int pivot = rand() % (end - start) + start;
    swap(A[end], A[pivot]);
    int Pindex = Partition(A, start, end);
    return Pindex;
}

void QuickSort(int *A, int start, int end)
{
    if (start < end)
    {
        //int Pindex = Partition(A, start, end);
        int Pindex = RandomizedPartition(A, start, end);
        QuickSort(A, start, Pindex - 1);
        QuickSort(A, Pindex + 1, end);
    }
}

int main()
{
    int A[] = {6, 2, 3, 1, 9, 10, 15, 13, 12, 17};
    int start = 0;
    int n = sizeof(A) / sizeof(A[0]);
    QuickSort(A, start, n);
    for (int i = 0; i < n; i++)
    {
        cout << A[i] << " ";
    }
    cout << endl;
    return 0;
}
